// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: customers.sql

package database

import (
	"context"
	"database/sql"
	"time"

	"github.com/google/uuid"
)

const createCustomer = `-- name: CreateCustomer :one
INSERT INTO customers (id, name, email, password_hash, country, description, photourl, created_at, updated_at)
VALUES($1,$2,$3,$4,$5,$6,$7,$8,$9)
RETURNING id, name, email, password_hash, country, description, photourl, created_at, updated_at
`

type CreateCustomerParams struct {
	ID           uuid.UUID
	Name         string
	Email        string
	PasswordHash string
	Country      string
	Description  sql.NullString
	Photourl     sql.NullString
	CreatedAt    time.Time
	UpdatedAt    time.Time
}

func (q *Queries) CreateCustomer(ctx context.Context, arg CreateCustomerParams) (Customer, error) {
	row := q.db.QueryRowContext(ctx, createCustomer,
		arg.ID,
		arg.Name,
		arg.Email,
		arg.PasswordHash,
		arg.Country,
		arg.Description,
		arg.Photourl,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	var i Customer
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Email,
		&i.PasswordHash,
		&i.Country,
		&i.Description,
		&i.Photourl,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getCustomerByEmail = `-- name: GetCustomerByEmail :one
SELECT id, name, email, password_hash, country, description, photourl, created_at, updated_at FROM customers WHERE email = $1
`

func (q *Queries) GetCustomerByEmail(ctx context.Context, email string) (Customer, error) {
	row := q.db.QueryRowContext(ctx, getCustomerByEmail, email)
	var i Customer
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Email,
		&i.PasswordHash,
		&i.Country,
		&i.Description,
		&i.Photourl,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getCustomerByID = `-- name: GetCustomerByID :one
SELECT id, name, email, password_hash, country, description, photourl, created_at, updated_at FROM customers WHERE id = $1
`

func (q *Queries) GetCustomerByID(ctx context.Context, id uuid.UUID) (Customer, error) {
	row := q.db.QueryRowContext(ctx, getCustomerByID, id)
	var i Customer
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Email,
		&i.PasswordHash,
		&i.Country,
		&i.Description,
		&i.Photourl,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
